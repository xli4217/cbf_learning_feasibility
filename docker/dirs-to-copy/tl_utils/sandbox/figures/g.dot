digraph "" {
accept_S2;
T0_init;
accept_S1;
trap;
accept_S2 -> accept_S2  [guard="((!(a)) && (!(b)))", input="set([0])", key=0, label="((!(a)) && (!(b)))", weight=0];
accept_S2 -> accept_S1  [guard="((a) && (!(b)))", input="set([1])", key=0, label="((a) && (!(b)))", weight=0];
accept_S2 -> trap  [guard=trap_guard, input="set([2, 3])", key=0, label=trap_guard, weight=0];
T0_init -> accept_S2  [guard="(!(a))", input="set([0, 2])", key=0, label="(!(a))", weight=0];
T0_init -> accept_S1  [guard="(a)", input="set([1, 3])", key=0, label="(a)", weight=0];
accept_S1 -> accept_S2  [guard="((!(a)) && (b))", input="set([2])", key=0, label="((!(a)) && (b))", weight=0];
accept_S1 -> accept_S1  [guard="((a) && (b))", input="set([3])", key=0, label="((a) && (b))", weight=0];
accept_S1 -> trap  [guard=trap_guard, input="set([0, 1])", key=0, label=trap_guard, weight=0];
trap -> trap  [guard="(1)", input="set([0, 1, 2, 3])", key=0, label="(1)", weight=0];
}
